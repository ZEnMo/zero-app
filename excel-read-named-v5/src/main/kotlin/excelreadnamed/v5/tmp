Capacities and annual totals:

 - contracted delivery capacity should be less or equal to physical capacity
 contractedConnectionDeliveryCapacityKw <= physicalCapacityKw

 gridConnection.electricity.getContractedConnectionCapacityKw() <=
 gridConnection.electricity.grootverbruik?.physicalCapacityKw


 - contracted feed-in capacity should be less or equal to physical capacity
 contractedConnectionFeedinCapacityKw <= physicalCapacityKw
 gridConnection.electricity.grootverbruik?.contractedConnectionSupplyCapacityKw <=
 gridConnection.electricity.grootverbruik?.physicalCapacityKw


 - annual pv production should be more than annual feed-in
 annualElectricityDeliveryKwh > annualElectricityFeedinKwh

 gridConnection.electricity.getAnnualElectricityDelivery_kWh //require get?
 gridConnection.electricity.annualElectricityFeedIn_kWh

 - grootverbruik should have physical connection more than 3x80A
 gridConnection.electricity.grootverbruik?.physicalCapacityKw >= static_number // conf file fix values?

 - kleinverbruik should have physical connection less than or equal to 3x80A
 kleinverbruik is not mapped yet

 - power per charge points should be between 3 and 150 kW
 gridConnection.transport.cars.each{|car| static_number <= car.powerPerChargePointKw >= static_number }

 - total power of charge points should be below contracted delivery capacity + battery power // ? Car/Van/truck? all?
 totalEnergyConsumption = gridConnection.transport.cars.sumOf { it.energyConsumption }
 deliveryCapacity = gridConnection.electricity.getContractedConnectionCapacityKw() +
 gridConnection.storage.plannedBatteryPowerKw //? plannedBatteryCapacityKwh
 totalEnergyConsumption <= deliveryCapacity

 - km per vehicle should be between 5k and 100k (4x: cars, vans, trucks, other)
 gridConnection.transport.cars annualTravelDistancePerTruckKm

 val carsExceedingLimit = cars.filter { it.annualTravelDistancePerTruckKm >= 100 } // Message for each car?
 !carsExceedingLimit.isEmpty()

 - number of electric vehicles should be less than or equal to total number of vehicles (4x: cars, vans, trucks, other)
Booleans:

 hasPV true -> should have annual production
 hasBattery true -> should have power and capacity
 hasNaturalGasConnection true -> should have annual delivery
Quarter-hourly data:

 annual feed-in should match total of quarter-hourly feed-in
 annual gas delivery should match total of hourly delivery
 quarter-hourly delivery data should not have "holes" longer than 4 days. Display duration of hole in message.
 quarter-hourly production data should not have "holes" longer than 4 days. Display duration of hole in message.
 quarter-hourly feed-in should not be all zeroes if hasPv is true
 every time step in quarter-hourly feed-in should be be less than or equal to production + battery power
 peak of delivery should be less than contracted capacity
 peak of feed-in should be less than contracted capacity