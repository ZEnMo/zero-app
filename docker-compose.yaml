# This is for use during development.
# TODO: it would be more user-friendly and more prod-like if we put a Traefik proxy in the network.

services:
    migrate:
        image: redgate/flyway:10.2.0
        volumes:
            - ./migrations:/flyway/sql
        command: migrate
        env_file:
            -   ./docker/flyway.env
        environment:
            FLYWAY_URL: jdbc:postgresql://postgres:5432/postgres
            FLYWAY_USER: postgres
        depends_on:
            - postgres

    kleinverbruik:
        build:
            context: ./kleinverbruik
        ports:
            - 127.0.0.1:80:80

    ## Production version
    ztor-production:
        build:
            context: .
        user: 1000:1000
        ports:
            - 127.0.0.1:8082:8082
        env_file:
            - ./docker/ztor.env
        environment:
            POSTGRES_URL: jdbc:postgresql://postgres:5432/postgres
            POSTGRES_USER: postgres

    zorm-test:
        image: gradle:8.3.0-jdk20
        depends_on:
            - postgres
        working_dir: /home/gradle/zorm
        user: gradle
        volumes:
            - ./zorm:/home/gradle/zorm
            - gradle-test-cache:/home/gradle/.gradle
        command: gradle test --no-daemon
        env_file:
            - ./docker/ztor.env
        environment:
            POSTGRES_URL: jdbc:postgresql://postgres:5432/test
            POSTGRES_USER: postgres

    ztor-test:
        image: gradle:8.3.0-jdk20
        depends_on:
            - postgres
        working_dir: /home/gradle/zero
        user: gradle
        volumes:
            - .:/home/gradle/zero
            - gradle-test-cache:/home/gradle/.gradle
        command: gradle ztor:test --no-daemon
        env_file:
            -   ./docker/ztor.env
        environment:
            POSTGRES_URL: jdbc:postgresql://postgres:5432/test
            POSTGRES_USER: postgres

    ## Recompiles on source code changes.
    ## Do ensure that the two Gradle containers have independent Home directories and Project cache directories.
    ztor-build-once:
        image: gradle:8.3.0-jdk20
        working_dir: /home/gradle/ztor
        user: gradle
        volumes:
            - ./ztor:/home/gradle/ztor
            - gradle-build-once-cache:/home/gradle/.gradle
        command: gradle buildFatJar --no-daemon

    ## compile with Java 11 for AnyLogic
    zorm-fatjar-11:
        image: gradle:8.6.0-jdk11
        working_dir: /home/gradle/zorm
        user: gradle
        volumes:
            - ./zorm:/home/gradle/zorm
            - gradle-build-once-cache:/home/gradle/.gradle
        command: gradle buildFatJar --no-daemon

    ## Recompiles on source code changes.
    ## Do ensure that the two Gradle containers have independent Home directories and Project cache directories.
    ztor-build:
        image: gradle:8.3.0-jdk20
        working_dir: /home/gradle/zero
        user: gradle
        volumes:
            - .:/home/gradle/zero
            - gradle-build-cache:/home/gradle/.gradle
        command: gradle --continuous ztor:classes

    ## Runs Ktor web server and reloads classes if the compiled .class file changes.
    ## Do ensure that the two Gradle containers have independent Home directories and Project cache directories.
    ztor-run:
        image: gradle:8.3.0-jdk20
        ports:
            - 127.0.0.1:8082:8082
        working_dir: /home/gradle/zero
        user: gradle
        volumes:
            - .:/home/gradle/zero
            - gradle-run-cache:/home/gradle/.gradle
        restart: unless-stopped
        command: gradle --project-cache-dir=/tmp/gradle ztor:run
        env_file:
            - ./docker/ztor.env
        environment:
            POSTGRES_URL: jdbc:postgresql://postgres:5432/postgres
            POSTGRES_USER: postgres
            BASE_URL: http://localhost:8082
            CORS_ALLOW_ORIGIN_PATTERN: 'http://localhost:1234'
        depends_on:
            - ztor-build
            - postgres

    ztor-echo-schema-sql:
        image: gradle:8.3.0-jdk20
        ports:
            - 127.0.0.1:8082:8082
        working_dir: /home/gradle/zero
        user: gradle
        volumes:
            - .:/home/gradle/zero
            - gradle-cmd-cache:/home/gradle/.gradle
        command: gradle --project-cache-dir=/tmp/gradle -Dep-online-csv=poepie ztor:run --args=echo-schema-sql
        env_file:
           - ./docker/ztor.env
        environment:
            POSTGRES_URL: jdbc:postgresql://postgres:5432/gen
            POSTGRES_USER: postgres

    frontend:
        image: node:20.4.0
        working_dir: /app
        volumes:
            - ./frontend:/app
        command: npm run start
        environment:
            KLEINVERBRUIK_URL: http://127.0.0.1:80
            ZTOR_URL: http://localhost:8082
        ports:
            - 127.0.0.1:1234:1234

    postgres:
        image: postgres:13.9 # same as on Azure
        ports:
            - 127.0.0.1:5432:5432
        volumes:
            - postgres:/var/lib/postgresql/data
        env_file:
            - ./docker/postgres.env

volumes:
    gradle-build-cache:
    gradle-build-once-cache:
    gradle-test-cache:
    gradle-run-cache:
    gradle-cmd-cache:
    postgres:
